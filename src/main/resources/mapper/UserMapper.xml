<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.health.api.db.dao.UserMapper">

    <select id="searchUserPermissions" parameterType="int" resultType="java.lang.String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id = #{userId}
          AND u.`status` = 1
    </select>
    <select id="login" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT id
        FROM tb_user
        WHERE username = #{username}
        AND password = #{password}
        LIMIT 1;
    </select>
    <select id="SearchUserNameById" parameterType="int" resultType="java.lang.String">
        SELECT username
        from tb_user
        where id=#{userId}
    </select>

    <update id="UpadatePassword" parameterType="java.util.Map">
        update tb_user
        set password=#{newPassword}
        where id=#{userId}
        and password=#{password}
    </update>



    <select id="searchByPage" parameterType="java.util.Map" resultType="java.util.HashMap">
        /*!mycat: sql=
        SELECT DISTINCT u.id,
        u.name,
        u.sex,
        u.tel,
        u.email,
        d.dept_name AS dept,
        u.hiredate,
        u.root,
        u.status,
        (
        SELECT GROUP_CONCAT( role_name separator "，" )
        FROM tb_role
        WHERE JSON_CONTAINS ( u.role, CONVERT (id, CHAR) )
        ) AS roles
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT (r.id, CHAR) )
        LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE 1=1
        <if test="name!=null">
            AND u.name LIKE "%${name}%"
        </if>
        <if test="sex!=null">
            AND u.sex=#{sex}
        </if>
        <if test="role!=null">
            AND r.role_name=#{role}
        </if>
        <if test="deptId!=null">
            AND d.id=#{deptId}
        </if>
        <if test="status!=null">
            AND u.status=#{status}
        </if>
        ORDER BY u.id ASC
        LIMIT #{start}, #{length}
        */
        SELECT DISTINCT u.id,
        u.name,
        u.sex,
        u.tel,
        u.email,
        d.dept_name AS dept,
        u.hiredate,
        u.root,
        u.status,
        (
        SELECT GROUP_CONCAT( role_name separator "，" )
        FROM tb_role
        WHERE JSON_CONTAINS ( u.role, CONVERT (id, CHAR) )
        ) AS roles
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT (r.id, CHAR) )
        LEFT JOIN tb_dept d ON u.dept_id = d.id
        <where>
            <if test="name!=null">
                AND u.name LIKE "%${name}%"
            </if>
            <if test="sex!=null">
                AND u.sex=#{sex}
            </if>
            <if test="role!=null">
                AND r.role_name=#{role}
            </if>
            <if test="deptId!=null">
                AND d.id=#{deptId}
            </if>
            <if test="status!=null">
                AND u.status=#{status}
            </if>
        </where>
        ORDER BY u.id ASC
        LIMIT #{start}, #{length}
    </select>

    <select id="searchCount" parameterType="java.util.Map" resultType="long">
        SELECT COUNT(*)
        FROM (
        SELECT DISTINCT u.id
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT (r.id, CHAR) )
        <where>
            <if test="name!=null">
                AND u.name LIKE "%${name}%"
            </if>
            <if test="sex!=null">
                AND u.sex=#{sex}
            </if>
            <if test="role!=null">
                AND r.role_name=#{role}
            </if>
            <if test="deptId!=null">
                AND u.dept_id=#{deptId}
            </if>
            <if test="status!=null">
                AND u.status=#{status}
            </if>
        </where>
        ) AS temp
    </select>

<!--    <insert id="insert" parameterType="com.example.health.api.db.dao.UserMapper">-->
<!--        INSERT INTO tb_user-->
<!--        SET username=#{username},-->
<!--            password=#{password},-->
<!--            name=${name},-->
<!--            sex = #{sex},-->
<!--            tel = #{tel},-->
<!--            email=#{email},-->
<!--            hiredate = #{hiredate},-->
<!--            role = #{role},-->
<!--            root = false,-->
<!--            <if test="deptId!=null">-->
<!--                dept_id=#{deptId},-->
<!--            </if>-->
<!--            status=${status},-->
<!--            create_time=NOW()-->
<!--    </insert>-->

    <insert id="insert" parameterType="com.example.health.api.db.pojo.UserEntity">
        INSERT INTO tb_user (
        username, password, name, sex, tel, email, hiredate, role, root,
        <if test="deptId != null">dept_id,</if>
        status, create_time
        )
        VALUES (
        #{username}, #{password}, #{name}, #{sex}, #{tel}, #{email}, #{hiredate}, #{role}, false,
        <if test="deptId != null">#{deptId},</if>
        #{status}, NOW()
        )
    </insert>

    <select id="searchById" parameterType="int" resultType="java.util.HashMap">
        SELECT id, username, name, sex, tel, email, hiredate, role,
               dept_id AS deptId,
               status
        FROM tb_user
        WHERE id = #{userId}
    </select>

    <update id="update" parameterType="java.util.Map">
        UPDATE tb_user
        SET  username = #{username},
             name = #{name},
             sex = #{sex},
             tel = #{tel},
             email = #{email},
             hiredate = #{hiredate},
             role = #{role},
             dept_id = #{deptId}
        WHERE id = #{userId}

    </update>

    <delete id="deleteUserByIds">
        DELETE FROM tb_user
        WHERE id IN 
        <foreach collection="array" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
        AND root=FALSE
    </delete>

    <update id="dismisss" parameterType="int">
        update tb_user
        SET status='2'
        WHERE id=#{id}
        AND root=FALSE
    </update>

    <select id="searchDoctorById" parameterType="int" resultType="HashMap">
        SELECT `name`,
               sex,
               tel
        FROM tb_user
        WHERE id = #{id}
    </select>
</mapper>
